name: deploy and push Docker image

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  # 1. Fast unit tests (outside Docker)
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.3"

      - name: Install Poetry
        run: pip install poetry==2.1.4

      - name: Install dependencies (including test)
        run: poetry install --with test

      - name: Run unit tests
        run: poetry run pytest tests/ -v --maxfail=3
        env:
          env: "test"

  # 2. Docker build + integration tests
  docker-integration:
    runs-on: ubuntu-latest
    needs: unit-tests   # only run if unit tests pass
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image (test stage)
        run: docker build -f infra/docker/publish.Dockerfile -t myapp:test --target test .

      - name: Run integration tests inside Docker
        run: docker run --rm myapp:test

  # 3. Build and push production image (only on main)
  # docker-prod:
  #   runs-on: ubuntu-latest
  #   needs: docker-integration
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Login to Docker Hub
  #       uses: actions/docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and push prod image
  #       uses: actions/docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: infra/docker/publish.Dockerfile
  #         target: prod
  #         push: true
  #         tags: |
  #           ${{ secrets.DOCKER_USERNAME }}/myapp:latest
  #           ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }}