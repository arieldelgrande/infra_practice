apiVersion: v1
kind: Namespace
metadata:
  name: publish-staging
  labels:
    name: publish-staging
---
apiVersion: v1
kind: Secret
metadata:
  name: publish-aws
  namespace: publish-staging
type: Opaque
stringData:
  aws_access_key_id: "your_access_key_id"
  aws_secret_access_key: "your_secret_access_key"
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: publish-staging
  namespace: publish-staging
spec:
  hard:
    "requests.cpu": "3"
    "requests.memory": "2Gi"
    "limits.cpu": "4"
    "limits.memory": "3Gi"
    pods: "4"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: publish-limits
  namespace: publish-staging
spec:
  limits:
  - default:
      memory: 512Mi
      cpu: 1
    defaultRequest:
      memory: 256Mi
      cpu: 0.5
    # max: 
    #   memory: 1Gi
    #   cpu: "1"
    # min:
    #   memory: 100M
    #   cpu: 100m
    type: Container
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: publish-staging
  namespace: publish-staging
  labels:
    app: publish
  annotations:
    kubernetes.io/change-cause: "initial deploy of publish app"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: publish
  template:
    metadata:
      labels:
        app: publish
    spec:
      imagePullSecrets:
        - name: publish-ecr-secret
      containers:
        - name: publish
          image: 992382530736.dkr.ecr.us-east-1.amazonaws.com/publish:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: ENV
              value: "staging"
            - name: AWS_DEFAULT_REGION
              value: "us-east-1"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: publish-aws
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: publish-aws
                  key: aws_secret_access_key
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: publish-service
  namespace: publish-staging
  labels:
    app: publish
spec:
  selector:
    app: publish
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: publish-ingress
  namespace: publish-staging
  annotations:
    # kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: "/"   # Uncomment if you want path rewrites
spec:
  ingressClassName: nginx
  rules:
    - host: publish.local.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: publish-service
                port:
                  number: 80 
      
  # Optional TLS block (requires a TLS secret)
  # tls:
  #   - hosts:
  #       - publish.staging.example.com
  #     secretName: publish-staging-tls
  